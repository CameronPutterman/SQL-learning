Pull a list of customer ids with the customer’s full name, and address, along with combining their city and country together. Be sure to make a space in between these two and make it UPPER CASE. (e.g. LOS ANGELES USA)

SELECT CustomerId
,FirstName
,LastName
,Address
,UPPER(City||' '||Country) AS City_and_Country
FROM Customers


Create a new employee user id by combining the first 4 letters of the employee’s first name with the first 2 letters of the employee’s last name. Make the new field lower case and pull each individual step to show your work.

SELECT EmployeeId
,FirstName
,LastName
,LOWER(SUBSTR(FirstName,1,4)||SUBSTR(LastName,1,2))
FROM Employees 


Show a list of employees who have worked for the company for 15 or more years using the current date function. Sort by lastname ascending.

SELECT EmployeeId
,LastName
,HireDate
,(Current_Date - HireDate) AS Employment_Tenure
FROM Employees
WHERE Employment_Tenure >= 15 
ORDER BY LastName ASC


Profiling the Customers table, answer the following question.

SELECT *
FROM Customers
WHERE Phone is null 


Find the cities with the most customers and rank in descending order.

SELECT COUNT(*)
,City
FROM Customers
GROUP BY City
ORDER BY COUNT(*) DESC


Create a new customer invoice id by combining a customer’s invoice id with their first and last name while ordering your query in the following order: firstname, lastname, and invoiceID.

SELECT FirstName
,LastName
,cus.CustomerId
,inv.InvoiceId
,FirstName||LastName||inv.InvoiceId
FROM Customers cus
JOIN Invoices inv
WHERE cus.CustomerId = inv.CustomerId
ORDER BY FirstName ASC
